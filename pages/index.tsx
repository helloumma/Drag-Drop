import Head from "next/head";
import { useState } from "react";

import { DndContext } from "@dnd-kit/core";
import Draggable from "./Draggable";
import Droppable from "./Droppable";

import Form from "../components/form";

export default function Home() {
  const [input, setInput] = useState<string>("");
  const [todoList, setTodoList] = useState<{ name: string }[]>([]);

  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setInput(e.target.value);
  };

  const onSubmit = (e: React.FormEvent<HTMLInputElement>) => {
    e.preventDefault();
    if (input === "") return alert("please enter a value");

    const newList = todoList.slice();
    newList.splice(0, 0, { name: input });
    setTodoList(newList);
    setInput("");
  };

  //const containers = ["A", "B", "C"];
  const [parent, setParent] = useState(null);
  //const draggableMarkup = <Draggable id="draggable">Drag me</Draggable>;

  function handleDragEnd(event) {
    const { over } = event;

    // If the item is dropped over a container, set it as the parent
    // otherwise reset the parent to `null`
    setParent(over ? over.id : null);
  }
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        {/* map over the list vals here so they can be draggable/droppable */}
        <Form input={input} onChange={onChange} onSubmit={onSubmit} />
        <DndContext onDragEnd={handleDragEnd}>
          {/*parent === null ? draggableMarkup : null*/}

          {/*containers.map((id) => (
            // We updated the Droppable component so it would accept an `id`
            // prop and pass it to `useDroppable`
            <Droppable key={id} id={id}>
              {parent === id ? draggableMarkup : "Drop here"}
            </Droppable>
          ))*/}

          {todoList.map((items: any, id: number) => (
            <Droppable key={id} id={id}>
              {parent === id ? (
                <Draggable id={`draggable-${id}`}>{items.name}</Draggable>
              ) : (
                <Draggable id={`draggable-${id}`}>{items.name}</Draggable>
              )}
            </Droppable>
          ))}
        </DndContext>
      </main>
    </>
  );
}
