import Head from "next/head";
import { useState } from "react";

import { DndContext, useDroppable } from "@dnd-kit/core";
import Draggable from "./Draggable";

import Form from "../components/form";

import ToDoBoard from "../components/todo";
import InProgressBoard from "../components/inProgress";
import CompleteBoard from "../components/complete";
import { Center, Flex, Wrap, WrapItem } from "@chakra-ui/react";

export default function Home() {
  const [input, setInput] = useState<string>("");
  const [todoList, setTodoList] = useState<{ name: string; status: string }[]>(
    []
  );

  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setInput(e.target.value);
  };

  const onSubmit = (e: React.FormEvent<HTMLInputElement>) => {
    e.preventDefault();
    if (input === "") return alert("please enter a value");

    const newList = todoList.slice();
    newList.splice(0, 0, { name: input, status: "to-do" });
    setTodoList(newList);
    setInput("");
  };

  const handleDragEnd = (e: any) => {
    const { over } = e;
    if (!over) return;

    const { id: parentId } = over;
    const itemId = e.active.id;

    const newList = todoList.map((item, id) => {
      id = id + 1;
      if (id === itemId) {
        return {
          ...item,
          status: parentId,
        };
      } else {
        return item;
      }
    });
    setTodoList(newList);
  };

  const { isOver, setNodeRef } = useDroppable({
    id: "to-do",
  });

  const toDoStyle = {
    backgroundColor: isOver ? "lightblue" : "white",
    padding: "10px",
    border: "1px solid black",
    marginBottom: "10px",
  };

  const inProgressStyle = {
    backgroundColor: isOver ? "lightyellow" : "white",
    padding: "10px",
    border: "1px solid black",
    marginBottom: "10px",
  };

  const doneStyle = {
    backgroundColor: isOver ? "lightgreen" : "white",
    padding: "10px",
    border: "1px solid black",
    marginBottom: "10px",
    textDecoration: "line-through",
  };

  return (
    <>
      <Head>
        <title>Drag + Drop</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Form input={input} onChange={onChange} onSubmit={onSubmit} />

        <DndContext onDragEnd={handleDragEnd}>
          {/*
            <Board style={todo}>
              {todoList.map((item, id: number) => {
                if(item.status === "to-do") ...
              })}
            </Board>
           */}
          <Wrap>
            <WrapItem>
              <Center w="33vw" bg="red.200">
                <ToDoBoard>
                  {todoList.map((item, id: number) => {
                    if (item.status === "to-do") {
                      return (
                        <ul>
                          <Draggable key={id} id={id + 1}>
                            <li>{item.name}</li>
                          </Draggable>
                        </ul>
                      );
                    }
                  })}
                </ToDoBoard>
              </Center>
            </WrapItem>
            <WrapItem>
              <Center w="33vw" bg="blue.200">
                <InProgressBoard>
                  {todoList.map((item, id: number) => {
                    if (item.status === "in-progress") {
                      return (
                        <ul>
                          <Draggable key={id} id={id + 1}>
                            <li>{item.name}</li>
                          </Draggable>
                        </ul>
                      );
                    }
                  })}
                </InProgressBoard>
              </Center>
            </WrapItem>
            <WrapItem>
              <Center w="32.5vw" bg="green.200">
                <CompleteBoard>
                  {todoList.map((item, id: number) => {
                    if (item.status === "done") {
                      return (
                        <ul>
                          <Draggable key={id} id={id + 1}>
                            <li>
                              <s>{item.name}</s>
                            </li>
                          </Draggable>
                        </ul>
                      );
                    }
                  })}
                </CompleteBoard>
              </Center>
            </WrapItem>
          </Wrap>
        </DndContext>
      </main>
    </>
  );
}
