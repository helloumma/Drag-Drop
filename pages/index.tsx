import Head from "next/head";
import { useState } from "react";

import { DndContext } from "@dnd-kit/core";
import Draggable from "./Draggable";

import Form from "../components/form";

import ToDoBoard from "../components/todo";
import InProgressBoard from "../components/inProgress";
import CompleteBoard from "../components/complete";

export default function Home() {
  const [input, setInput] = useState<string>("");
  const [todoList, setTodoList] = useState<{ name: string; status: string }[]>(
    []
  );

  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setInput(e.target.value);
  };

  const onSubmit = (e: React.FormEvent<HTMLInputElement>) => {
    e.preventDefault();
    if (input === "") return alert("please enter a value");

    const newList = todoList.slice();
    newList.splice(0, 0, { name: input, status: "to-do" });
    setTodoList(newList);
    setInput("");
  };

  const handleDragEnd = (event: any) => {
    const { over } = event;
    if (!over) return;

    const { id: parentId } = over;
    const itemId = event.active.id;

    const newList = todoList.map((item, id) => {
      if (id === itemId) {
        return {
          ...item,
          status: parentId,
        };
      } else {
        return item;
      }
    });

    setTodoList(newList);
  };
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Form input={input} onChange={onChange} onSubmit={onSubmit} />
        <DndContext onDragEnd={handleDragEnd}>
          <ToDoBoard>
            {todoList.map((item, id: number) => {
              if (item.status === "to-do") {
                return (
                  <Draggable key={id} id={id}>
                    <p>{item.name}</p>
                  </Draggable>
                );
              }
            })}
          </ToDoBoard>
          <InProgressBoard>
            {todoList.map((item, id) => {
              if (item.status === "in-progress") {
                return (
                  <Draggable key={id} id={id}>
                    <p>{item.name}</p>
                  </Draggable>
                );
              }
            })}
          </InProgressBoard>
          <CompleteBoard>
            {todoList.map((item, id) => {
              if (item.status === "done") {
                return (
                  <Draggable key={id} id={id}>
                    <p>{item.name}</p>
                  </Draggable>
                );
              }
            })}
          </CompleteBoard>
        </DndContext>
      </main>
    </>
  );
}
